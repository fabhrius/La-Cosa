{"generator":"Code Snippets v3.4.2","date_created":"2023-08-14 21:34","snippets":[{"id":5,"name":"assign_role_after_checkout","desc":"<p>assign_role_after_checkout<\/p>","code":"function assign_role_after_checkout( $order_id ) {\n\t\n\t\/\/ obtener la orden a partir del id\n    $order = wc_get_order( $order_id );\n\t\n\t\/\/ Get the user ID associated with the order\n    $user_id = $order->get_user_id();\n\t\/\/ category_slug - categoria de suscripciones\n\t$required_category_slug = 'subscriptions';\n\n\t$desired_attribute_name_for_role = 'subscription_role';\n\t$desired_attribute_name_for_duration = 'subscription_duration';\n\t\n\t\/\/ role que otorga la subscrition y duracion de la suscripcion\n\t$role; $duration;\n\n\n\n\t\/\/ iterar sobre los items de la orden\n\tforeach ($order->get_items() as $item_id => $item) {\n\n\t\t$product = $item->get_product();\n    \t\tif ($product) {\n\t\t\t$categories = $product->get_category_ids();\n\n\t\t\tforeach ($categories as $category_id) {\n\t\t\t\t\/\/ Get the category details\n\t\t\t\t$category = get_term($category_id, 'product_cat');\n\t\t\t\tif($category){\n\t\t\t\t\t$category_slug = $category->slug;\n\t\t\t\t\tif($category_slug === $required_category_slug){ \n\n        \t\t\t\t\t\/\/ Get the attributes for the product\n       \t\t\t \t\t\t$attributes = $product->get_attributes();\n\n        \t\t\t\t\tforeach ($attributes as $attribute_name => $attribute) {\n            \t\t\t\t\t\t$attribute_value = $attribute['value'];\n\n\t\t\t\t\t\t\t\t\tif ($attribute_name === $desired_attribute_name_for_role) {\n\t\t\t\t\t\t\t\t\t\t$role=$attribute_value;\n\n\t\t\t\t\t\t\t\t\t\t\/\/ Add the user role to the user\n\t\t\t\t\t\t\t\t\t\t$user = new WP_User( $user_id );\n\t\t\t\t\t\t\t\t\t\t$user->add_role( $role );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif ($attribute_name === $desired_attribute_name_for_duration) {\n\t\t\t\t\t\t\t\t\t\t$duration=$attribute_value;\n\n\t\t\t\t\t\t\t\t\t\t\/\/ schedule a cron\n\t\t\t\t\t\t\t\t\t\t\/\/schedule_cron_subscrition_ending_time($user, $role, $duration);\n\t\t\t\t\t\t\t\t\t\tschedule_cron_subscription_ending_time($user_id, $role, $duration);\n\t\t\t\t\t\t\t\t\t}\n        \t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction remove_subscription_role_callback($user_id, $role) {\n    \/\/ Remove the role from the user\n    $user = new WP_User($user_id);\n    $user->remove_role($role);\n}\n\nfunction schedule_cron_subscription_ending_time($user_id, $role, $duration) {\n    \/\/ Calculate the timestamp when the role should be removed\n    $end_timestamp = strtotime(\"+{$duration} seconds\");\n\n    \/\/ Schedule the cron event\n    wp_schedule_single_event($end_timestamp, 'remove_subscription_role', array($user_id, $role));\n}\n\nfunction after_checkout_with_status_on_hold( $order_id ) {\n\tassign_role_after_checkout( $order_id );\n}\n\nfunction after_checkout_with_status_processing( $order_id ) {\n\tassign_role_after_checkout( $order_id );\n}\n\n\n\nadd_action('remove_subscription_role', 'remove_subscription_role_callback', 10, 2);\n\n\n\nadd_action( 'woocommerce_order_status_processing', 'after_checkout_with_status_processing' ); \nadd_action( 'woocommerce_order_status_completed', 'assign_role_after_checkout' );\nadd_action( 'woocommerce_order_status_on-hold', 'after_checkout_with_status_on_hold' );\n\n\n","active":true,"modified":"2023-08-14 18:19:53"}]}