
Los sistemas computacionales, asi como los procedimientos que se utilizan para resolver problemas logicos, 
pueden ser medidos y comparados.

No todos los computadores son iguales, algunos pueden abordar problemas de mayor complejidad que otros, o consumir menos recursos.
Tambien podemos encontrar diferencias entre los metodos que utilizamos para resolver problemas.
Un mismo problema puede ser abordado de diferentes formas, utilizando distintos procedimientos.

En este capitulo, nos proponemos obtener una medida de  
la Eficiencia algoritmica
del sistema computacional basado en especies de criaturas vivientes que estamos analizando.

No tendremos problemas en establecer una medida aproximada pero rigurosa de la eficiencia del sistema, 
razonando sobre los hechos que hemos podido observar en el experimento del capitulo anterior.

																																								aaaaaaaaaaaaaaaaaaaaaaaaaq`
Hablaremos de Eficiencia Algoritmica.

Un algoritmo es un conjunto ordenado de pasos que describen el procedimiento utilizado para resolver un problema.
Por ejemplo, si queremos ordenar una baraja de naipes,
como lo haremos ?
Es posible que 2 personas propongan formas diferentes de conseguir el mismo resultado.
Porque existen diferentes formas de ordenar una baraja, existen diferentes procedimientos, algoritmos.

sin embargo, algunos procedimientos ordenaran la baraja con mas operaciones que otros.
Ante la posibilidad de utilizar distintos algoritmos para realizar el trabajo, preferiremos aquel que consiga el objetivo con un menor numero de pasos.
Porque hacer el trabajo con menos operaciones se traduce en un menor consumo de recursos, como tiempo y energia.

Realizar el trabajo con un menor consumo de recursos es lo que llamaremos, Eficiencia.
Diremos, por lo tanto que, el algoritmo que hace el trabajo con menor numero de operaciones es, el mas eficiente.

Para dejar clara esta idea, veamos, por ejemplo, 2 algoritmos diferentes que podriamos usar para ordenar una baraja.

en el primero, reviso toda la baraja para extraer el naipe de menor valor, y una vez localizado lo separo de la baraja.
repito el procedimiento con los naipes que han quedado en la baraja para obtener el segundo naipe de menor valor y separarlo de la baraja, y repito el procedimiento para obtener la tercera, y otra vez para la siguiente, y repito el proceso una y otra vez hasta tener la baraja ordenada.

en el segundo algoritmo, preparo espacio sobre la mesa para cada naipe en una cuadricula.
extraigo el primer naipe de la baraja y lo coloco directamente en el lugar que tiene reservado en la cuadricula, y lo mismo hago con el segundo, el tercero y todos los demas.

Veamos ahora cual de estos 2 algoritmos es mas eficiente.

el primer algoritmo, revisa cuidadosamente la baraja comparando uno a uno todas los naipes para extraer el de menor valor.
si la baraja tiene 50 naipes, se habran realizado 50 comparaciones.
despues de realizar 50 comparaciones tenemos 1 naipe ordenado, y 49 sin ordenar.
Para extraer el segundo naipe de menor valor repetiremos el procedimiento anterior con los 49 naipes que todavia estan sin ordenar, y eso requerira otras 49 comparaciones.
repetiremos el procedimiento para extraer el tercer naipe con los 48 todavia sin ordenar, y esto requerira otras 48 comparaciones,
repetiremos el procedimiento una y otra vez hasta que no queden naipes sin ordenar.
cuantas comparaciones seran necesarias ?
50 + (50 - 1) + (50 - 2) + (50 - 3) + (50 - 4) + ... + (50 - 49)

si al numero de elementos que queremos ordenar le llamamos 'N', en este caso N=50, el numero de operaciones necesarias seran
aproximadamente N * (N-1)
Podemos afirmar que el coste en tiempo de ejecutar este algoritmo es de "el orden de" N cuadrado.

Veamos ahora el segundo algoritmo.

Sobre una superficie, dibujamos una cuadricula, reservando un lugar para cada naipe de la baraja.
Extraemos un naipe, digamos que es el cinco de treboles,
y lo colocamos dentro de la cuadricula, en el lugar reservado para el cinco de treboles.
Extremos el segundo naipe, digamos que es el dos de diamantes,
lo colocaremos dentro de la cuadricula, en el lugar reservado para el dos de diamantes.
Hemos extraido 2 naipes y tenemos 2 naipes ordenados.
Repetimos el procedimiento con el tercero, y con los restantes.
cuantas operaciones son necesarias para ordenar la baraja ?
una operacion por naipe.
si el numero de naipes es N, entonces el coste en tiempo de este algoritmo es del orden de N.


Ahora que tenemos una medida del coste en tiempo de ambos algoritmos podemos compararlos.
el primero es del orden de N cuadrado.
el segundo es del orden de N.

el segundo algoritmo hace el trabajo con menos operaciones, y por lo tanto es mas eficiente.

Ahora que hemos visto como pueden compararse 2 metodos, 
volvamos al sistema inteligente formado por seres vivientes que estamos analizando.

Veamos como podemos caracterizar el sistema en terminos de eficiencia algoritmica, e intentemos compararlo con otros sistemas.
Lo hace bien, o lo hace mal ?
Podriamos sugerir cambios en el procedimiento para mejorar su eficiencia ?

Para responder a estas preguntas revisemos el experimento del capitulo anterior.

El tablero es un laberinto, con una entrada y una salida,
sobre el tablero tenemos una unica ficha.
el objetivo del juego es llevar la ficha desde la entrada hasta la salida.
la ficha puede desplazarse a una distancia de una sola casilla cada vez, y este es el unico movimiento valido.
Y lo que queremos saber es, 
cual es el camino que la ficha debe recorrer para ir desde la entrada hasta la salida ?

La entrada la hemos situado en la casilla 'A1', y la salida en la casilla 'H8'

La distancia que separa la entrada de la salida es de 7 casillas.

(dibujo)


La ficha solo puede moverse una casilla cada vez, por lo tanto, para alcanzar la salida seran necesarios al menos 7 movimientos.
7 movimientos como minimo, en el caso de que encuentre el camino mas corto, 
pero pueden ser mas, dependiendo del metodo que utilice para explorar el tablero.

	``````````````````````



