Eficiencia que es ?


Los sistemas computacionales, asi como los procedimientos que se utilizan para resolver problemas logicos, 
pueden ser medidos y comparados.

No todos los computadores son iguales, algunos pueden abordar problemas de mayor complejidad que otros, realizar un mayor numero de operaciones por unidad de tiempo, o consumir menos recursos para realizar el mismo trabajo.
Tambien podemos encontrar diferencias entre los metodos que utilizamos para resolver problemas.
Un mismo problema puede ser abordado de diferentes formas, utilizando distintos procedimientos.

En este capitulo, nos proponemos obtener una medida de  
la Eficiencia algoritmica
del sistema computacional basado en especies de criaturas vivientes que estamos analizando.

No tendremos problemas en establecer una medida aproximada pero rigurosa de la eficiencia del sistema, 
razonando sobre los hechos que hemos podido observar en el experimento del capitulo anterior.

------------------------------

Hablaremos de Eficiencia Algoritmica.

Un algoritmo es la descripcion de el procedimiento utilizado para resolver un problema, como un conjunto ordenado de pasos.
Por ejemplo, si queremos ordenar una baraja de naipes,
como lo haremos ?
Es posible que 2 personas propongan formas diferentes de conseguir el mismo resultado.
Porque existen diferentes formas de ordenar una baraja, existen diferentes procedimientos, algoritmos.

sin embargo, algunos procedimientos ordenaran la baraja con mas operaciones que otros.
Ante la posibilidad de utilizar distintos algoritmos para realizar el trabajo, preferiremos aquel que consiga el objetivo con un menor numero de pasos.
Porque hacer el trabajo con menos operaciones se traduce en un menor consumo de recursos, como tiempo y energia.

Realizar el trabajo con un menor consumo de recursos es lo que llamaremos, Eficiencia.
Diremos, por lo tanto que, el algoritmo que hace el trabajo con menor numero de operaciones es, el mas eficiente.

Para dejar clara esta idea, veamos, por ejemplo, 2 algoritmos diferentes que podriamos usar para ordenar una baraja.

----------------------

2 ejemplos:


en el primero, reviso toda la baraja para extraer el naipe de menor valor, y una vez localizado lo separo de la baraja.
repito el procedimiento con los naipes que han quedado en la baraja para obtener el segundo naipe de menor valor y separarlo de la baraja, y repito el procedimiento para obtener la tercera, y otra vez para la siguiente, y repito el proceso una y otra vez hasta tener la baraja ordenada.

en el segundo algoritmo, preparo espacio sobre la mesa para cada naipe en una cuadricula.
extraigo el primer naipe de la baraja y lo coloco directamente en el lugar que tiene reservado en la cuadricula, y lo mismo hago con el segundo, el tercero y todos los demas.

Veamos ahora cual de estos 2 algoritmos es mas eficiente.

el primer algoritmo, revisa cuidadosamente la baraja comparando uno a uno todas los naipes para extraer el de menor valor.
si la baraja tiene 50 naipes, se habran realizado 50 comparaciones.
despues de realizar 50 comparaciones tenemos 1 naipe ordenado, y 49 sin ordenar.
Para extraer el segundo naipe de menor valor repetiremos el procedimiento anterior con los 49 naipes que todavia estan sin ordenar, y eso requerira otras 49 comparaciones.
repetiremos el procedimiento para extraer el tercer naipe con los 48 todavia sin ordenar, y esto requerira otras 48 comparaciones,
repetiremos el procedimiento una y otra vez hasta que no queden naipes sin ordenar.
cuantas comparaciones seran necesarias ?
50 + (50 - 1) + (50 - 2) + (50 - 3) + (50 - 4) + ... + (50 - 49)

si al numero de elementos que queremos ordenar le llamamos 'N', en este caso N=50, el numero de operaciones necesarias seran
aproximadamente N * (N-1)
Podemos afirmar que el coste en tiempo de ejecutar este algoritmo es de "el orden de" N cuadrado.

Veamos ahora el segundo algoritmo.

Sobre una superficie, dibujamos una cuadricula, reservando un lugar para cada naipe de la baraja.
Extraemos un naipe, digamos que es el cinco de treboles,
y lo colocamos dentro de la cuadricula, en el lugar reservado para el cinco de treboles.
Extremos el segundo naipe, digamos que es el dos de diamantes,
lo colocaremos dentro de la cuadricula, en el lugar reservado para el dos de diamantes.
Hemos extraido 2 naipes y tenemos 2 naipes ordenados.
Repetimos el procedimiento con el tercero, y con los restantes.
cuantas operaciones son necesarias para ordenar la baraja ?
una operacion por naipe.
si el numero de naipes es N, entonces el coste en tiempo de este algoritmo es del orden de N.


Ahora que tenemos una medida del coste en tiempo de ambos algoritmos podemos compararlos.
el primero es del orden de N cuadrado.
el segundo es del orden de N.

el segundo algoritmo hace el trabajo con menos operaciones, y por lo tanto es mas eficiente.

Ahora que hemos visto como pueden compararse 2 metodos, 
volvamos al sistema inteligente formado por seres vivientes que estamos analizando.

y veamos el metodo que ha utilizado el sistema en terminos de eficiencia algoritmica.
Podriamos sugerir cambios en el procedimiento para mejorar su eficiencia ?

Para responder a estas preguntas revisemos el experimento del capitulo anterior.

El tablero representa un laberinto, con una entrada y una salida,
sobre el tablero tenemos una unica ficha.
el objetivo del juego es llevar la ficha desde la entrada hasta la salida.
la ficha puede desplazarse a una distancia de una sola casilla cada vez, y este es el unico movimiento valido.
Y lo que queremos saber es, 
cual es el camino que la ficha debe recorrer para ir desde la entrada hasta la salida ?

La entrada la hemos situado en la casilla 'A1', y la salida en la casilla 'H8'

La distancia que separa la entrada de la salida es de 7 casillas.

(dibujo)


La ficha solo puede moverse una casilla cada vez, por lo tanto, para alcanzar la salida seran necesarios al menos 7 movimientos.
7 movimientos como minimo, en el caso de que encuentre el camino mas corto, 
pero pueden ser mas, dependiendo del metodo que utilice para explorar el tablero.

(dibujos)


-----------------------------------


Recordemos ahora como ha resuelto el problema.

Hemos creado un individuo, el primero de su especie, representando el estado inicial del problema.
el tablero con una ficha colocada en la entrada del laberinto, 'A1'
todos los individuos de esta especie, cumpliran con un ciclo de vida que consiste en, 
nacer, reproducirse y morir.

Cuando hemos dotado de vida a este primer individuo, el ha llevado a cabo las etapas de su ciclo de vida.
Se ha reproducido, generando todos los hijos posibles, e inmediatamente despues ha muerto, eliminandose del sistema.
Al cumplir con su ciclo de vida, ha iniciado un proceso mas complejo, que va mas alla de su propia vida, y que continuara aun cuando el ya no forma parte del sistema.
El proceso que ha desencadenado con su existencia le sobrevivira.

Y sucede lo siguiente...


Digamos tambien que los individuos de esta especie se reproducen un segundo despues de nacer.
y que al reproducirse, generan todos los hijos posibles de una vez, en la primera generacion.

Se produce una generacion cada segundo.

Y ha sucedido lo siguiente,




-------------------------------------------------

Los posibles hijos de ‘A1’ ocuparan las posiciones marcadas con X.
Todos ellos naceran con la primera generacion, y entre ellos ‘B2’.

Los posible hijos de ‘B2’ ocuparan las posiciones marcadas con X.
Todos ellos naceran con la segunda generacion, y entre ellos ‘C3’.

Los posibles hijos de ‘C3’ ocuparan las posiciones marcadas con X.
Todos ellos naceran con la tercera generacion, y entre ellos ‘D4’.

Los posibles hijos de ‘D4’ ocuparan las posiciones marcadas con X. Todos ellos naceran con la cuarta generacion, y entre ellos ‘E5’.

Los posibles hijos de ‘E5’ ocuparan las posiciones marcadas con X. Todos ellos naceran con la quinta generacion, y entre ellos ‘F6’. 

Los posibles hijos de ‘F6’ ocuparan las posiciones marcadas con X. Todos ellos naceran con la sexta generacion, y entre ellos ‘G7’.

Los posibles hijos de ‘G7’ ocuparan las posiciones marcadas con X. Todos ellos naceran con la septima generacion, y entre ellos ‘H8’. 

Este individuo, ‘H8’, representa el estado final que queríamos alcanzar, y tiene la respuesta al problema, el camino que va desde la entrada hasta la salida del laberinto.


------------------------------------------------

el sistema ha encontrado la respuesta despues de 7 generaciones.
el sistema avanza un paso en el proceso en cada generacion.

Y con cada generacion, 
avanza un paso en la direccion correcta.
No se pierde, no duda, no se equivoca.
se mueve hacia el objetivo como si supiera adonde se encuentra.

Con cada paso, avanza hacia el objetivo,
Por el camino mas corto.


hemos establecido que son necesarios al menos 7 pasos para alcanzar la salida,
ya que se encuentra a una distancia de 7 casillas y la ficha no puede moverse mas de 1 casilla en cada jugada.

de modo que,
el sistema ha encontrado la respuesta con el  minimo numero de pasos necesarios.

No sera posible mejorarlo.
Jamas existira un sistema mas eficiente que este, 
porque el problema no puede resolverse en un menor numero de pasos.

-------------------------------

el sistema ha encontrado la solucion en la septima generacion.

Nos preguntabamos como podemos mejorar el procedimiento que utiliza el sistema para hacerlo mas eficiente.
Veamoslo.

Con cada generacion la ficha realiza un movimiento, una jugada valida.
Hemos establecido que una jugada valida consiste en desplazar la ficha a una distancia de una casilla.
Tambien hemos establecido que la distancia entre la entrada y la salida es de 7 casillas, y por lo tanto, no puede ser recorrida en menos de 7 movimientos.

el sistema ha alcanzado la salida en la septima generacion, es decir, con 7 movimientos.
y si como hemos dicho, esa distancia no puede ser recorrida con menos movimientos, entonces, la eficiencia del sistema no puede ser mejorada.

lo que ha sucedido es que, el sistema con cada generacion, avanza un paso en la direccion correcta.
No se pierde, no duda, no se equivoca.
Se mueve hacia el objetivo como si supiera adonde esta.

No existira jamas un sistema mas eficiente que este, porque el problema no puede ser resuelto con un menor numero de pasos.




 


