Eficiencia que es ?


Tanto entre los sistemas computacionales, asi como entre los procedimientos que estos utilizan para resolver problemas logicos, existe una gran variedad, y por lo tanto, pueden ser medidos y comparados entre si.

Es facil ver que no todos los computadores son iguales, existen detalles que los hacen diferentes unos de otros, como por ejemplo, la capacidad para abordar problemas de mayor complejidad, o la posibilidad de realizar un mayor numero de operaciones por unidad de tiempo, o quizas la habilidad de consumir una menor cantidad de recursos para realizar un mismo trabajo.
Y esto solo por enumerar algunas de las posibles diferencias.

Del mismo modo encontraremos diferencias entre los metodos que un computador podria utilizar para resolver un mismo problema.
Un mismo problema puede ser abordado de diferentes formas, utilizando distintos procedimientos.

En este capitulo, nos proponemos obtener una medida de  
la Eficiencia algoritmica
del sistema computacional basado en criaturas vivientes que hemos utilizado en el experimento del capitulo anterior.

No sera dificil establecer una medida aproximada de la eficiencia del sistema, 
razonando sobre los hechos que hemos podido observar.

Diremos que un algoritmo es mas eficiente que otro cuando encuentra la solucion al problema con un numero menor de operaciones.

------------------------------------

Algoritmos diferentes:

Un algoritmo es la descripcion de el procedimiento utilizado para resolver un problema.
O dicho de otra forma, es la secuencia de operaciones que deben realizarse para alcanzar el resultado deseado.

Por ejemplo, si quisieramos ordenar una baraja de naipes, como podriamos hacerlo ?
Es posible que diferentes personas propongan diferentes formas de conseguir el mismo resultado.

Y siendo los metodos diferentes, es posible tambien que, algunos metodos consigan el resultado con un esfuerzo menor que otros.
Ante la posibilidad de hacer el trabajo de formas diferentes, preferiremos el algoritmo que consiga el objetivo de la forma mas eficiente.
Realizar el trabajo con un numero de operaciones se traduce en un menor consumo de recursos, y en especial, tiempo y energia.

Para ver de forma practica como podemos medir y comparar la eficiencia de algoritmos diferentes, veamos como ejemplo 2 formas de ordenar una baraja.

-------------------------------


Ordenar una baraja:

Metodo 1:

reviso toda la baraja, comparando naipe a naipe, con el objetivo de encontrar el de menor valor.
despues de haber revisado toda la baraja habre localizado el de menor valor y lo separo de la baraja colocandolo en una pila que llamare "pila ordenada".
Al resto de la baraja le llamare "pila desordenada".
Ahora tengo la baraja separada en dos pilas.
La pila ordenada contiene un naipe.
La pila desordenada contiene toda la baraja menos un naipe.

Ahora, reviso la pila desordenada, comparando naipe a naipe, buscando el de menor valor.
Despues de haber revisado toda la pila separo el naipe de menor valor y lo coloco en la pila ordenada.

Ahora la pila ordenada contiene dos naipes, y la pila desordenadas contiene toda la baraja menos dos naipes.

Vuelvo a revisar la pila desordenada para extraer el tercer naipe de menor valor.
Y repito el mismo procedimiento una y otra vez hasta que ya no queden naipes en la pila desordenada.

Entonces, toda la baraja estara en la pila ordenada, y los naipes estaran ordenados de menor a mayor.



Metodo 2:

antes de empezar, preparo espacio sobre la mesa para cada naipe en una cuadricula.
Asi, cada naipe de la baraja tiene un lugar reservado sobre la mesa, que ahora esta vacio.
Una vez hecho esto, 
levanto el primer naipe de la baraja, digamos que es el cinco de diamantes, asi que lo coloco sobre la mesa, en la cuadricula, en el espacio reservado para el cinco de diamantes.
repito el procedimiento.
levanto el primer naipe de la baraja, digamos que es el tres de treboles, y lo coloco sobre la mesa, en la cuadricula, en el espacio reservado para el tres de treboles.
repito el procedimiento con todos los naipes hasta que no quede ninguno en la baraja.

Entonces toda la baraja estara sobre la mesa en la cuadricula, ordenada.



-------------------------

Numero de operaciones:


Veamos ahora cuantas operaciones han tenido que realizar estos dos metodos, aproximadamente, para ordenar la baraja.

Metodo 1:

el primer algoritmo, revisa cuidadosamente la baraja comparando uno a uno todas los naipes para extraer el de menor valor.
si la baraja tiene 50 naipes, se habran realizado 50 comparaciones.
despues de realizar 50 comparaciones tenemos 1 naipe ordenado, y 49 sin ordenar.
Para extraer el segundo naipe de menor valor repetiremos el procedimiento anterior con los 49 naipes que todavia estan sin ordenar, y eso requerira otras 49 comparaciones.
repetiremos el procedimiento para extraer el tercer naipe con los 48 todavia sin ordenar, y esto requerira otras 48 comparaciones,
repetiremos el procedimiento una y otra vez hasta que no queden naipes sin ordenar.
cuantas comparaciones habran sido necesarias ?
50 + (50 - 1) + (50 - 2) + (50 - 3) + (50 - 4) + ... + (50 - 49)

si al numero de elementos que queremos ordenar le llamamos 'N', en este caso N=50, el numero de operaciones necesarias seran
aproximadamente N * (N-1)
Podemos decir, por lo tanto, que el coste de ejecutar este algoritmo es de "el orden de" N cuadrado.


Metodo 2:

Empezamos reservando espacio para cada naipe en una cuadricula.
Extraemos un naipe de la baraja y lo colocamos en el lugar que tiene reservado en la cuadricula.
Lo mismo hacemos con el segundo y con todos los demas.

cuantas operaciones son necesarias para ordenar la baraja ?
una operacion por naipe.
si el numero de naipes es N, entonces el numero de operaciones sera del orden de N.


--------------------------


Cual es el mejor ?


Ahora que tenemos una medida del numero de operacion que ambos algoritmos necesitan para conseguir el objetivo podemos compararlos.

el primero es del orden de N cuadrado.
el segundo es del orden de N.

el segundo algoritmo hace el trabajo con menos operaciones, y por lo tanto es mas eficiente.


--------------------



Volvamos ahora al sistema de inteligencia natural que estamos analizando, la maquina viviente:


Ahora que hemos visto como pueden compararse 2 metodos, 
volvamos al sistema inteligente formado por seres vivientes
y veamos el metodo que ha utilizado en terminos de eficiencia algoritmica.

Como es de eficiente ?
Cuantas operaciones necesita para alcanzar el objetivo ?
Existen algoritmos que encuentren la solucion con menos operaciones ?
Podriamos sugerir cambios en el procedimiento para mejorar su eficiencia ?

Para responder a estas preguntas revisemos el experimento del capitulo anterior.

---------------------

Resumo las caracteristicas del problema del ejemplo:

El tablero representa un laberinto, con una entrada y una salida,
sobre el tablero tenemos una unica ficha.
el objetivo del juego es llevar la ficha desde la entrada hasta la salida.
la ficha puede desplazarse a una distancia de una sola casilla cada vez, y este es el unico movimiento valido.
Y lo que queremos saber es, 
cual es el camino que la ficha debe recorrer para ir desde la entrada hasta la salida ?

La entrada la hemos situado en la casilla 'A1', y la salida en la casilla 'H8'

La distancia que separa la entrada de la salida es de 7 casillas.

(dibujo)


La ficha solo puede moverse una casilla cada vez, por lo tanto, no sera posible alcanzar la salida con menos de 7 movimientos.
7 movimientos como minimo, en el caso de que encuentre el camino mas corto, 
pero pueden ser mas, dependiendo del metodo que utilice para explorar el tablero.

No pueden ser menos porque una jugada valida desplaza la ficha a una distancia de 1 casilla, de modo que, desplazarse 7 casillas requeriran 7 movimientos o mas.

----------------------

Recordemos ahora como ha sido resuelto el problema:


Hemos creado un individuo, el primero de su especie, representando el estado inicial del problema.
el tablero con una ficha colocada en la entrada del laberinto, 'A1'
todos los individuos de esta especie, cumpliran con un ciclo de vida que consiste en, 
nacer, reproducirse y morir.

Cuando hemos dotado de vida a este primer individuo, el ha llevado a cabo las etapas de su ciclo de vida.
Se ha reproducido, generando todos los hijos posibles, e inmediatamente despues ha muerto, eliminandose del sistema.
Al cumplir con su ciclo de vida, ha iniciado un proceso mas complejo, que va mas alla de su propia vida, y que continuara aun cuando el ya no forma parte del sistema.
El proceso que ha desencadenado con su existencia le sobrevivira.


Y ha sucedido lo siguiente,









----------------



(dibujos)

----------------------------

------------------------------------------------

el sistema ha encontrado la respuesta despues de 7 generaciones.
el sistema avanza un paso en el proceso en cada generacion.

Y con cada generacion, 
avanza un paso en la direccion correcta.
No se pierde, no duda, no se equivoca.
se mueve hacia el objetivo como si supiera adonde se encuentra.

Con cada paso, avanza hacia el objetivo,
Por el camino mas corto.


hemos establecido que son necesarios al menos 7 pasos para alcanzar la salida,
ya que se encuentra a una distancia de 7 casillas y la ficha no puede moverse mas de 1 casilla en cada jugada.

de modo que,
el sistema ha encontrado la respuesta con el  minimo numero de pasos necesarios.

Nos preguntabamos como podemos mejorar el procedimiento que utiliza el sistema para hacerlo mas eficiente.
Y eso, simplemente no es posible.

No sera posible mejorarlo.
Jamas existira un sistema mas eficiente que este, 
porque el problema no puede resolverse con un menor numero de operaciones.


-------------------------------
-------------------------------

el sistema ha encontrado la solucion en la septima generacion.

Nos preguntabamos como podemos mejorar el procedimiento que utiliza el sistema para hacerlo mas eficiente.
Veamoslo.

Con cada generacion la ficha realiza un movimiento, una jugada valida.
Hemos establecido que una jugada valida consiste en desplazar la ficha a una distancia de una casilla.
Tambien hemos establecido que la distancia entre la entrada y la salida es de 7 casillas, y por lo tanto, no puede ser recorrida en menos de 7 movimientos.

el sistema ha alcanzado la salida en la septima generacion, es decir, con 7 movimientos.
y si como hemos dicho, esa distancia no puede ser recorrida con menos movimientos, entonces, la eficiencia del sistema no puede ser mejorada.

lo que ha sucedido es que, el sistema con cada generacion, avanza un paso en la direccion correcta.
No se pierde, no duda, no se equivoca.
Se mueve hacia el objetivo como si supiera adonde esta.

No existira jamas un sistema mas eficiente que este, porque el problema no puede ser resuelto con un menor numero de pasos.




 

